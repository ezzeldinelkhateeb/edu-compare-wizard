#!/usr/bin/env python3
"""
ุจุฑูุงูุฌ ุงุฎุชุจุงุฑ ุณุฑูุน ูู Landing AI ูุน ุงูุตูุฑุฉ 101.jpg
Fast Landing AI test with 101.jpg
"""

import os
import sys
import asyncio
from pathlib import Path

# ุฅุถุงูุฉ ุงููุณุงุฑ ุฅูู PYTHONPATH
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))
sys.path.insert(0, str(current_dir / "backend"))

def test_direct_agentic_doc():
    """ุงุฎุชุจุงุฑ ูุจุงุดุฑ ูู agentic_doc"""
    print("๐ ุงุฎุชุจุงุฑ ูุจุงุดุฑ ูู agentic_doc ูุน ุงูุตูุฑุฉ 101.jpg")
    
    try:
        from agentic_doc.parse import parse
        import time
        
        image_path = "d:/ezz/compair/edu-compare-wizard/101.jpg"
        
        if not os.path.exists(image_path):
            print(f"โ ุงูุตูุฑุฉ ุบูุฑ ููุฌูุฏุฉ: {image_path}")
            return
        
        print(f"๐ธ ูุนุงูุฌุฉ ุงูุตูุฑุฉ: {image_path}")
        
        # ุชุนููู ูููุฉ ุฃุทูู
        os.environ['REQUESTS_TIMEOUT'] = '600'  # 10 ุฏูุงุฆู
        os.environ['HTTP_TIMEOUT'] = '600'
        os.environ['HTTPX_TIMEOUT'] = '600'
        
        start_time = time.time()
        
        print("๐ ุจุฏุก ุงูุชุญููู...")
        result = parse(image_path)
        
        end_time = time.time()
        processing_time = end_time - start_time
        
        print(f"โฑ๏ธ ููุช ุงููุนุงูุฌุฉ: {processing_time:.1f} ุซุงููุฉ")
        
        if result and len(result) > 0:
            doc = result[0]
            content = getattr(doc, 'markdown', '')
            chunks = getattr(doc, 'chunks', [])
            
            print(f"โ ุชู ุงูุงุณุชุฎุฑุงุฌ ุจูุฌุงุญ!")
            print(f"๐ ุทูู ุงููุญุชูู: {len(content)} ุญุฑู")
            print(f"๐งฉ ุนุฏุฏ ุงููุทุน: {len(chunks)}")
            
            # ุนุฑุถ ุฃูู 300 ุญุฑู
            if content:
                preview = content[:300] + "..." if len(content) > 300 else content
                print(f"๐ ูุนุงููุฉ ุงููุญุชูู:\n{preview}")
            
            # ุญูุธ ุงููุชูุฌุฉ
            output_file = "101_extracted_content.md"
            with open(output_file, 'w', encoding='utf-8') as f:
                f.write(f"# ุงููุต ุงููุณุชุฎุฑุฌ ูู 101.jpg\n\n")
                f.write(f"**ููุช ุงููุนุงูุฌุฉ:** {processing_time:.1f} ุซุงููุฉ\n\n")
                f.write(f"**ุนุฏุฏ ุงูุฃุญุฑู:** {len(content)}\n\n")
                f.write(f"**ุนุฏุฏ ุงููุทุน:** {len(chunks)}\n\n")
                f.write("## ุงููุญุชูู:\n\n")
                f.write(content)
            
            print(f"๐พ ุชู ุญูุธ ุงููุชูุฌุฉ ูู: {output_file}")
            
        else:
            print("โ ูู ูุชู ุงูุญุตูู ุนูู ูุชุงุฆุฌ")
            
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ: {e}")
        print(f"๐ ููุน ุงูุฎุทุฃ: {type(e).__name__}")
        
        # ุชุญููู ุงูุฎุทุฃ
        error_str = str(e).lower()
        if "timeout" in error_str:
            print("๐ ุงูุณุจุจ: ุงูุชูุงุก ุงููููุฉ ุงูุฒูููุฉ")
        elif "connection" in error_str:
            print("๐ ุงูุณุจุจ: ูุดููุฉ ูู ุงูุงุชุตุงู")
        elif "server" in error_str:
            print("๐ข ุงูุณุจุจ: ูุดููุฉ ูู ุฎุงุฏู Landing AI")

def test_with_smaller_image():
    """ุงุฎุชุจุงุฑ ูุน ุตูุฑุฉ ูุตุบุฑุฉ"""
    print("\n๐ผ๏ธ ุงุฎุชุจุงุฑ ูุน ุตูุฑุฉ ูุตุบุฑุฉ...")
    
    try:
        from PIL import Image
        from agentic_doc.parse import parse
        import time
        import tempfile
        
        original_path = "d:/ezz/compair/edu-compare-wizard/101.jpg"
        
        # ุชุตุบูุฑ ุงูุตูุฑุฉ
        with Image.open(original_path) as img:
            print(f"๐ ุงูุญุฌู ุงูุฃุตูู: {img.size}")
            
            # ุชุตุบูุฑ ุฅูู 1024px ูุญุฏ ุฃูุตู
            max_size = 1024
            if max(img.size) > max_size:
                ratio = max_size / max(img.size)
                new_size = (int(img.size[0] * ratio), int(img.size[1] * ratio))
                img = img.resize(new_size, Image.Resampling.LANCZOS)
                print(f"๐ ุงูุญุฌู ุงูุฌุฏูุฏ: {img.size}")
                
                # ุญูุธ ุงูุตูุฑุฉ ุงููุตุบุฑุฉ
                temp_path = "101_small.jpg"
                img.save(temp_path, quality=85, format='JPEG')
                print(f"๐พ ุชู ุญูุธ ุงูุตูุฑุฉ ุงููุตุบุฑุฉ: {temp_path}")
                
                # ุงุฎุชุจุงุฑ ุงูุชุญููู
                start_time = time.time()
                result = parse(temp_path)
                end_time = time.time()
                
                print(f"โฑ๏ธ ููุช ุงููุนุงูุฌุฉ ููุตูุฑุฉ ุงููุตุบุฑุฉ: {end_time - start_time:.1f} ุซุงููุฉ")
                
                if result and len(result) > 0:
                    doc = result[0]
                    content = getattr(doc, 'markdown', '')
                    print(f"โ ูุฌุญ ูุน ุงูุตูุฑุฉ ุงููุตุบุฑุฉ! ุทูู ุงููุญุชูู: {len(content)} ุญุฑู")
                else:
                    print("โ ูุดู ูุน ุงูุตูุฑุฉ ุงููุตุบุฑุฉ")
                    
                # ุชูุธูู
                if os.path.exists(temp_path):
                    os.remove(temp_path)
            else:
                print("๐ ุงูุตูุฑุฉ ุจุงููุนู ุตุบูุฑุฉ ุจูุง ููู ุงูููุงูุฉ")
                
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุงูุตูุฑุฉ ุงููุตุบุฑุฉ: {e}")

if __name__ == "__main__":
    print("๐งช ุงุฎุชุจุงุฑ Landing AI ุงูุณุฑูุน")
    print("=" * 40)
    
    # 1. ุงุฎุชุจุงุฑ ูุจุงุดุฑ
    test_direct_agentic_doc()
    
    # 2. ุงุฎุชุจุงุฑ ูุน ุตูุฑุฉ ูุตุบุฑุฉ
    test_with_smaller_image()
    
    print("\n๐ ุงูุชูู ุงูุงุฎุชุจุงุฑ")
